package ClasseNotas;

use strict;
use FuncoesUteis;







#################################################################################
# ClasseNotas
# criado  : 08/2016
# projeto : Gradenet.com.br
# autor   : Hermano Pereira
#--------------------------------------------------------------------------------
# Classe para criar e manipular o objeto que contém notas dos alunos
#################################################################################









#################################################################################
# new
#--------------------------------------------------------------------------------
# construtor
#################################################################################
sub new {
   my $proto = shift;
   my $class = ref($proto) || $proto;
   my $self =  {
      atividades => undef, 
      testes => undef,
   };
   bless ($self,$class);
   $self->clear;
   return $self;
}
#################################################################################










#################################################################################
# clear
#--------------------------------------------------------------------------------
# método para atributos receberem valores default
#################################################################################
sub clear {
   my $self = shift;
   $self->{atividades} = 0;
   $self->{testes} = 0;
}
#################################################################################





#################################################################################
# setAtividades e getAtividades
#--------------------------------------------------------------------------------
# métodos para manipular o atributo atividades
#################################################################################
sub setAtividades {
   my $self = shift;
   if (@_) {
      $self->{atividades} = $_[0] * 1;
   } else {
      die "A nota de atividades não foi atribuída!\n";
   }
}
#--------------------------------------------------------------------------------
sub getAtividades {
   my $self = shift;
   return $self->{atividades};
}
#################################################################################



#################################################################################
# setTestes e getTestes
#--------------------------------------------------------------------------------
# métodos para manipular o atributo testes
#################################################################################
sub setTestes {
   my $self = shift;
   if (@_) {
      $self->{testes} = $_[0] * 1;
   } else {
      die "A nota de testes não foi atribuída!\n";
   }
}
#--------------------------------------------------------------------------------
sub getTestes {
   my $self = shift;
   return $self->{testes};
}
#################################################################################




#################################################################################
# setDados
#--------------------------------------------------------------------------------
# métodos para manipular todos os atributos
#################################################################################
sub setDados {
   my $self = shift;
   if (@_) {
      $self->setAtividades($_[0]);
      $self->setTestes($_[1]);
   } else {
      die "Nenhum argumento foi enviado nas informações do ambiente!";
   }
}
#################################################################################









#################################################################################
# setDadosBD
#--------------------------------------------------------------------------------
# métodos para manipular todos os atributos que virão diretamente da base de dados
#################################################################################
sub setDadosBD {
   my $self = shift;
   if (@_) {
      $self->{atividades} = $_[0];
      $self->{testes} = $_[1];
   } else {
      die "Nenhum argumento foi enviado nas informações do ambiente!";
   }
}
#################################################################################










#################################################################################
# setDadosIU
#--------------------------------------------------------------------------------
# métodos para manipular todos os atributos repassando-os da IU
#################################################################################
sub setDadosIU {
   my $self = shift;
   if (@_) {
      $self->setAtividades($_[0]);
      $self->setTestes($_[1]);
   } else {
      die "Nenhum argumento foi enviado nas informações do ambiente!";
   }
}
#################################################################################










#################################################################################
# getDados
#--------------------------------------------------------------------------------
# métodos que apenas lista as informações de cada atributo
#################################################################################
sub getDados {
   my $self = shift;
   print "atividades = ".$self->getAtividades()."\n";
   print "testes = ".$self->getTestes()."\n";

}
#################################################################################












1;
